<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2016.1 (Build 656U)" ts="2017-11-25 11:58:45">
<Class name="AOC2016.Day25">
<Super>AOC2016.Utils</Super>
<TimeChanged>64612,43114.348039</TimeChanged>
<TimeCreated>64608,70161.262882</TimeCreated>

<Method name="Part">
<ClassMethod>1</ClassMethod>
<FormalSpec>file:%String="day25.txt"</FormalSpec>
<Implementation><![CDATA[
	#Dim iInput as %Integer
	#Dim input, iTry as %String
	
 	Try {
		Do ..Input(file, .input)
		For iTry=0:1 {
			Write iTry," : "
			If ..Try(.input,iTry) Quit
			Write !
		}
 	} catch {
	 	Write "Error : ",$ZError,!
 	}
 	Write !,"lowest integer = ",iTry,!
]]></Implementation>
</Method>

<Method name="Try">
<ClassMethod>1</ClassMethod>
<FormalSpec>input,a=0,b=0,c=0,d=0</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	#Dim error as %Integer = 0
 	#Dim out, lastOut as %Char = ""
	#Dim iInput as %Integer = 1
	#Dim count as %Integer = 0
	#Dim line, instruction as %String
	#Dim param1, param2 as %Integer
	#Dim register as Array of %Integer
	
	Set register("a")=a
	Set register("b")=b
	Set register("c")=c
	Set register("d")=d
	While iInput '> input {
		Set line = input(iInput)
		Set instruction=$Piece(line," ",1)
		Set param1=$Piece(line," ",2)
		Set param2=$Piece(line," ",3)
		If instruction = "cpy" {
			Set register(param2)=$Select($Data(register(param1)):register(param1),1:param1)
		} elseIf instruction = "inc" {
			Set register(param1) = register(param1) + 1
		} elseIf instruction = "dec" {
			Set register(param1) = register(param1) - 1
		} elseIf instruction = "jnz" {
			If $Select($Data(register(param1)):register(param1),1:param1)'=0 {
				Set iInput = iInput + param2 -1  //-1 since every loop will do +1 anyway
			}
		} elseIf instruction = "out" {
			set out = $Select($Data(register(param1)):register(param1),1:param1)
			write out
			If (lastOut '= ""), ((lastOut=1)&(out'=0)) ! ((lastOut=0)&(out'=1)) Set error = 1
			set lastOut = out
			Set count = count + 1
		}		
		Set iInput = iInput + 1
		If count > 500 Quit  //forever takes too long to compute, 500 is enough eternity ;)
		If error Quit
	}
	Quit 'error
]]></Implementation>
</Method>
</Class>
</Export>
